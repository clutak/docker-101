---
version: '3'
services:
  db:
    container_name: mysql
    image: mysql:8
    volumes:
      - db_data:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: test
      MYSQL_USER: user
      MYSQL_PASSWORD: test

  wordpress:
    depends_on:
      - db
    container_name: wordpress
    image: wordpress:5.8.2
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: user
      WORDPRESS_DB_PASSWORD: test
      WORDPRESS_DB_NAME: wordpress
    restart: always
    volumes:
      - wordpress:/var/www/html
    labels:
      - "traefik.http.routers.wordpress.rule=Host(`wordpress.$DOMAIN`)"
      - "traefik.enable=true"
      - "traefik.http.routers.wordpress.tls=true"
      - "traefik/http.routers.wordpress.tls.tls.domains[0].main=wordpress.$DOMAIN"
      - "traefik/http.routers.wordpress.tls.tls.domains[0].sans=wordpress-*.$DOMAIN"

  drupal:
    depends_on:
      - db
    container_name: drupal
    image: drupal:9.3
    restart: always
    environment:
      DRUPAL_DB_HOST: db:3306
      DRUPAL_DB-USER: user
      DRUPAL_DB_PASSWORD: test
      DRUPAL_DB_NAME: drupal
    volumes:
      - drupal_modules:/var/www/html/modules
      - drupal_profiles:/var/www/html/profiles
      - drupal_themes:/var/www/html/themes
      - drupal_sites:/var/www/html/sites
    labels:
      - "traefik.http.routers.drupal.rule=Host(`drupal.$DOMAIN`)"
      - "traefik.enable=true"
      - "traefik.http.routers.drupal.tls=true"
      - "traefik/http.routers.drupal.tls.tls.domains[0].main=drupal.$DOMAIN"
      - "traefik/http.routers.drupal.tls.tls.domains[0].sans=drupal-*.$DOMAIN"
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    labels:
      - "traefik.http.routers.adminer.rule=Host(`adminer.$DOMAIN`)"
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.tls=true"
      - "traefik/http.routers.adminer.tls.tls.domains[0].main=adminer.$DOMAIN"
      - "traefik/http.routers.adminer.tls.tls.domains[0].sans=adminer-*.$DOMAIN"

  reverse-proxy:
    container_name: traefik
    image: traefik:v2.5
    restart: always
    command:
      - "--providers.docker"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # static conf
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      # dynamic conf
      - ./tls.yml:/etc/traefik/tls.yml:ro
      # self-signed certificate
      - ./certs:/etc/certs:ro
      # htpasswd
      - ./users_credentials:/users_credentials:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"
      - "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.api.tls.certresolver=certificato"
      - "traefik.http.routers.api.tls.domains[0].main=*.${DOMAIN}"
      - "traefik.http.routers.api.service=api@internal"

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:2.11.0
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`portainer.$DOMAIN`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=9000"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.routers.frontend.tls.certresolver=leresolver"

volumes:
  wordpress:
  drupal_modules:
  drupal_profiles:
  drupal_themes:
  drupal_sites:
  db_data: {}
