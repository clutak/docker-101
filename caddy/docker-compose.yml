version: "3.7"
services:

  caddy:
    image: caddy
    container_name: caddy
    hostname: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./data:/data
      - ./config:/config

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:2.11.0
    restart: always
    hostname: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data    
    ports:
      - "9000:9000"

  db:
     container_name: mysql
     image: mysql:8
     volumes:
      - db_data:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d
     restart: always
     environment:
      MYSQL_ROOT_PASSWORD: test
      MYSQL_USER: user
      MYSQL_PASSWORD: test

  wordpress:
     depends_on:
      - db
     container_name: wordpress
     image: wordpress:5.8.2
     hostname: wordpress  
     environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: user
      WORDPRESS_DB_PASSWORD: test
      WORDPRESS_DB_NAME: wordpress
     restart: always
     volumes:
      - wordpress:/var/www/html

  drupal:
    depends_on:
      - db
    container_name: drupal
    hostname: drupal
    image: drupal:9.3
    restart: always
    environment:
      DRUPAL_DB_HOST: db:3306
      DRUPAL_DB-USER: user
      DRUPAL_DB_PASSWORD: test
      DRUPAL_DB_NAME: drupal
    volumes:
       - drupal_modules:/var/www/html/modules
       - drupal_profiles:/var/www/html/profiles
       - drupal_themes:/var/www/html/themes
       - drupal_sites:/var/www/html/sites
  
  adminer:
    container_name: adminer
    hostname: adminer
    image: adminer
    restart: always
    ports:
      - "8080:8080"
volumes:
    wordpress:
    drupal_modules:
    drupal_profiles:
    drupal_themes:
    drupal_sites:
    db_data: {}

